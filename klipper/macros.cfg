[gcode_macro FILAMENT_RUNOUT]
gcode:
  M300 S1 P10
  M600
  M300 S1 P10

[gcode_macro M300]
gcode:
  {% set S = params.S|default(1000)|int %}
  {% set P = params.P|default(100)|int %}
  SET_PIN PIN=BEEPER VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
  G4 P{P}
  SET_PIN PIN=BEEPER VALUE=0

[gcode_macro M600]
gcode:
  {% set X = params.X|default(25)|float %}
  {% set Y = params.Y|default(25)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-15 F1000
  RESTORE_GCODE_STATE NAME=M600_state
  
[gcode_macro M105]
rename_existing:            M105.1
gcode:  

   M105.1

   #if the extruder is off
   {% if printer.extruder.target == 0 %}

      #Set the LED to red if the extruder is off but is still hot, otherwise 
      # set the color to green
      {% if printer.extruder.temperature > 60.0 %}
         SET_LED LED=temp_leds RED=1 GREEN=0 BLUE=0  TRANSMIT=1
      {% else %}
         SET_LED LED=temp_leds RED=0.098 GREEN=0.36 BLUE=0  TRANSMIT=1
      {% endif %}     

   {% else %}

         #if the extruder temp is at target temperature 
         {% if printer.extruder.temperature >= printer.extruder.target - 4.0 %}
            SET_LED LED=temp_leds RED=1 GREEN=0 BLUE=0  TRANSMIT=1

         #if the extruder is still heating
         {% else %}
            {% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
            SET_LED LED=temp_leds RED={ scaler|float * 1 } GREEN=0 BLUE=0  TRANSMIT=1
         {% endif %}  

   {% endif %}

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    #SETUP_KAMP_MESHING
    #SETUP_LINE_PURGE
    # Start bed heating
    M140 S{BED_TEMP} ; start bed heating
    M104 S160 ; preheat extruder
    G90 ; absolute coordinates
    M82 ; extrude absolute
    M190 S{BED_TEMP} ; wait for bed temperature
    G28 ; home the printer
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    #G1 X2 Y10 Z5 F5000 ; move the nozzle near the bed
    #G1 Z0.25 F300 ; move very close to the bed
    Smart_Park
    M109 S{EXTRUDER_TEMP} ; Set and wait for nozzle to reach temperature
    G92 E0 ; Reset Extruder
    # intro line
    LINE_PURGE 
    #G1 Y190 E15 F1500
    #G1 X2.3 F5000
    #G1 Y10 E30 F1200
    #G92 E0 ; reset extruder

[gcode_macro END_PRINT]
variable_machine_depth: 202
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y{machine_depth}
    # Disable steppers
    M84

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[gcode_macro POWER_ON_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="on")}


[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60

[force_move]
enable_force_move: True

[gcode_macro UNLOCK_MOTORS]
gcode:
  SET_KINEMATIC_POSITION X=0 Y=0 Z=0

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro SIREN]
gcode:
    {% for flashes in range(params.COUNT|int) %}
	SET_LED LED=base_right RED=1 GREEN=0 BLUE=0
	SET_LED LED=base_left RED=0 GREEN=0 BLUE=1
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3
        SET_PIN PIN=caselight VALUE=0
	G4 P250                       ; sleep 250ms
        SET_PIN PIN=caselight VALUE=2.5
	G4 P250                       ; sleep 250ms
	SET_LED LED=base_left RED=1 GREEN=0 BLUE=0
	SET_LED LED=base_right RED=0 GREEN=0 BLUE=1
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3
        SET_PIN PIN=caselight VALUE=5
	G4 P250                       ; sleep 250ms
        SET_PIN PIN=caselight VALUE=7.5
	G4 P250                       ; sleep 250ms
    {% endfor %}
	SET_LED LED=base_right RED=1 GREEN=0 BLUE=0
	SET_LED LED=base_left RED=1 GREEN=0 BLUE=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3
        SET_PIN PIN=caselight VALUE=10

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/klipper-backup/script.sh
timeout: 90.0
verbose: True        